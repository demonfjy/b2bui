@import "../../function";
@import "../input/input";
@import "../grid/grid";

@mixin form-control-validation($text-color: $input-color, $border-color: $input-border-color, $background-color: $input-bg) {
  .#{$bl-prefix}-form-explain,
  .#{$bl-prefix}-form-split {
    color: $text-color;
  }
  
  // 输入框的不同校验状态
  .#{$bl-prefix}-input {
    &,
    &:hover {
      border-color: $border-color;
    }

    &:focus {
      @include active($border-color);
    }

    &:not([disabled]):hover {
      border-color: $border-color;
    }
  }

  .#{$bl-prefix}-calendar-picker-open .#{$bl-prefix}-calendar-picker-input {
    @include active($border-color);
  }

  .#{$bl-prefix}-input-prefix {
    color: $text-color;
  }

  .#{$bl-prefix}-input-group-addon {
    color: $text-color;
    border-color: $border-color;
    background-color: $background-color;
  }

  .has-feedback {
    color: $text-color;
  }
}

// Reset form styles
// -----------------------------
// Based on Bootstrap framework
@mixin reset-form() {
  /*legend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: 20px;
    font-size: $font-size-lg;
    line-height: inherit;
    color: $text-color-secondary;
    border: 0;
    border-bottom: $border-width-base $border-style-base $border-color-base;
  }
*/
  label {
    font-size: $font-size-base;
  }

  input[type="search"] {
    box-sizing: border-box;
  }

  // Position radios and checkboxes better
  input[type="radio"],
  input[type="checkbox"] {
    line-height: normal;
  }

  input[type="file"] {
    display: block;
  }

  // Make range inputs behave like textual form controls
  input[type="range"] {
    display: block;
    width: 100%;
  }

  // Make multiple select elements height not fixed
  select[multiple],
  select[size] {
    height: auto;
  }

  // Focus for file, radio, and checkbox
  input[type="file"]:focus,
  input[type="radio"]:focus,
  input[type="checkbox"]:focus {
    outline: thin dotted;
    outline: 5px auto -webkit-focus-ring-color; // lesshint duplicateProperty: false
    outline-offset: -2px;
  }

  // Adjust output element
  output {
    display: block;
    padding-top: 15px;
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $input-color;
  }
}

$form-prefix-cls: "#{$bl-prefix}-form";
$form-component-height: $input-height-lg;

@include reset-form();

label {
  position: relative;

  > .#{$iconfont-css-prefix} {
    vertical-align: top;
    font-size: $font-size-base;
  }
}

.#{$form-prefix-cls}-item-required:before {
  display: inline-block;
  margin-right: 4px;
  content: "*";
  font-family: SimSun;
  line-height: 1;
  font-size: $font-size-base;
  color: $label-required-color;
  .#{$form-prefix-cls}-hide-required-mark & {
    display: none;
  }
}

// Radio && Checkbox
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled {
    cursor: not-allowed;
  }
}

// These classes are used directly on <label>s
.#{$bl-prefix}-radio-inline,
.#{$bl-prefix}-radio-vertical,
.#{$bl-prefix}-checkbox-inline,
.#{$bl-prefix}-checkbox-vertical {
  &.disabled {
    cursor: not-allowed;
  }
}

// These classes are used on elements with <label> descendants
.#{$bl-prefix}-radio,
.#{$bl-prefix}-checkbox {
  &.disabled {
    label {
      cursor: not-allowed;
    }
  }
}

// Form items
// You should wrap labels and controls in .#{$form-prefix-cls}-item for optimum spacing
.#{$form-prefix-cls}-item {
  font-size: $font-size-base;
  margin-bottom: $form-item-margin-bottom;
  color: $text-color;
  vertical-align: top;

  // nested FormItem
  & > &,
  & :not(.#{$form-prefix-cls}) > & {
    margin-bottom: -$form-item-margin-bottom;
  }

  &-control {
    line-height: $form-component-height;
    position: relative;
    @include clearfix;
  }

  &-with-help {
    margin-bottom: $form-item-margin-bottom - $font-size-base * $line-height-base;
  }

  &-label {
    text-align: right;
    vertical-align: middle;
    line-height: $form-component-height;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    label {
      color: $label-color;

      &:after {
        content: ":";
        margin: 0 8px 0 2px;
        position: relative;
        top: -0.5px;
      }
    }
  }

  .#{$bl-prefix}-switch {
    margin: 4px 0;
  }

  &-no-colon &-label label:after {
    content: " ";
  }
}

.#{$form-prefix-cls}-explain {
  line-height: 1.5;
}

.#{$form-prefix-cls}-explain,
.#{$form-prefix-cls}-extra {
  color: $text-color-secondary;
}

.#{$form-prefix-cls}-text {
  display: inline-block;
  padding-right: 8px;
}

.#{$form-prefix-cls}-split {
  display: block;
  text-align: center;
}

// 表单下的输入框尺寸唯一: 大尺寸
form {
  .has-feedback {
    .#{$bl-prefix}-input {
      padding-right: 24px;
    }

    // Fix overlapping between feedback icon and <Select>'s arrow.
    // https://github.com/ant-design/ant-design/issues/4431
    .#{$bl-prefix}-select {
      &-arrow,
      &-selection__clear {
        right: 28px;
      }
      &-selection-selected-value {
        padding-right: 42px;
      }
    }
    .#{$bl-prefix}-cascader-picker {
      &-arrow {
        padding-right: 36px;
      }
      &-clear {
        right: 28px;
      }
    }

    .#{$bl-prefix}-calendar-picker {
      &-icon,
      &-clear {
        right: 28px;
      }
    }
  }

  textarea.#{$bl-prefix}-input {
    height: auto;
  }

  // input[type=file]
  .#{$bl-prefix}-upload {
    background: transparent;
  }

  input[type="radio"],
  input[type="checkbox"] {
    width: 14px;
    height: 14px;
  }

  // Radios and checkboxes on same line
  .#{$bl-prefix}-radio-inline,
  .#{$bl-prefix}-checkbox-inline {
    display: inline-block;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
    margin-left: 8px;

    &:first-child {
      margin-left: 0;
    }
  }

  .#{$bl-prefix}-checkbox-vertical,
  .#{$bl-prefix}-radio-vertical {
    display: block;
  }

  .#{$bl-prefix}-checkbox-vertical + .#{$bl-prefix}-checkbox-vertical,
  .#{$bl-prefix}-radio-vertical + .#{$bl-prefix}-radio-vertical {
    margin-left: 0;
  }

  .#{$bl-prefix}-input-number {
    margin-top: -1px;
    margin-right: 8px;
  }

  .#{$bl-prefix}-select,
  .#{$bl-prefix}-cascader-picker {
    width: 100%;
  }
}

// Input combined with select
.#{$bl-prefix}-input-group-wrap {
  .#{$bl-prefix}-select-selection {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    &:hover {
      border-color: $border-color-base;
    }
  }

  .#{$bl-prefix}-select-selection--single {
    margin-left: -1px;
    height: $input-height-lg;
    background-color: #eee;
    .#{$bl-prefix}-select-selection__rendered {
      padding-left: 8px;
      padding-right: 25px;
      line-height: 30px;
    }
  }

  .#{$bl-prefix}-select-open .#{$bl-prefix}-select-selection {
    border-color: $border-color-base;
    box-shadow: none;
  }
}

// Form layout
//== Vertical Form
@mixin make-vertical-layout() {
  padding: 0 0 8px;
  display: block;
  text-align: left;

  label:after {
    content: '';
  }
}
.#{$form-prefix-cls}-vertical .#{$form-prefix-cls}-item-label,
// when labelCol is 24, it is a vertical form
.#{$bl-prefix}-col-24.#{$form-prefix-cls}-item-label,
.#{$bl-prefix}-col-xl-24.#{$form-prefix-cls}-item-label {
  @include make-vertical-layout();
}

@media (max-width: $screen-xs-max) {
  .#{$bl-prefix}-col-xs-24.#{$form-prefix-cls}-item-label {
    @include make-vertical-layout();
  }
}

@media (max-width: $screen-sm-max) {
  .#{$bl-prefix}-col-sm-24.#{$form-prefix-cls}-item-label {
    @include make-vertical-layout();
  }
}

@media (max-width: $screen-md-max) {
  .#{$bl-prefix}-col-md-24.#{$form-prefix-cls}-item-label {
    @include make-vertical-layout();
  }
}

@media (max-width: $screen-lg-max) {
  .#{$bl-prefix}-col-lg-24.#{$form-prefix-cls}-item-label {
    @include make-vertical-layout();
  }
}

//== Inline Form
.#{$form-prefix-cls}-inline {
  .#{$form-prefix-cls}-item {
    display: inline-block;
    margin-right: 10px;
    margin-bottom: 0;

    &-with-help {
      margin-bottom: 24px;
    }

    > div {
      display: inline-block;
      vertical-align: middle;
    }
  }

  .#{$form-prefix-cls}-text {
    display: inline-block;
  }

  .has-feedback {
    display: inline-block;
  }

  // Fix https://github.com/ant-design/ant-design/issues/1040
  .#{$form-prefix-cls}-explain {
    position: absolute;
  }
}

// Validation state
.has-success,
.has-warning,
.has-error,
.is-validating {
  &.has-feedback:after {
    position: absolute;
    top: 0;
    right: 0;
    visibility: visible;
    pointer-events: none;
    @include square($input-height-lg);
    line-height: $input-height-lg;
    text-align: center;
    font-size: $font-size-lg;
    animation: zoomIn .3s $ease-out-back;
    @include iconfont-font("");
    z-index: 1;
  }
}

.has-success {
  &.has-feedback:after {
    animation-name: diffZoomIn1 !important;
  }
}

.has-error {
  &.has-feedback:after {
    animation-name: diffZoomIn2 !important;
  }
}

.has-warning {
  &.has-feedback:after {
    animation-name: diffZoomIn3 !important;
  }
}

.has-success {
  &.has-feedback:after {
    content: '\e6e5';
    color: $success-color;
  }
}

.has-warning {
  @include form-control-validation($warning-color, $warning-color);

  &.has-feedback:after {
    content: '\e6d5';
    color: $warning-color;
  }

  //select
  .#{$bl-prefix}-select {
    &-selection {
      border-color: $warning-color;
    }
    &-open .#{$bl-prefix}-select-selection,
    &-focused .#{$bl-prefix}-select-selection {
      @include active($warning-color);
    }
  }

  // arrow and icon
  .#{$bl-prefix}-calendar-picker-icon:after,
  .#{$bl-prefix}-picker-icon:after,
  .#{$bl-prefix}-select-arrow,
  .#{$bl-prefix}-cascader-picker-arrow {
    color: $warning-color;
  }

  //input-number, timepicker
  .#{$bl-prefix}-input-number,
  .#{$bl-prefix}-time-picker-input {
    border-color: $warning-color;
    &-focused,
    &:focus {
      @include active($warning-color);
    }
    &:not([disabled]):hover {
      border-color: $warning-color;
    }
  }
}

.has-error {
  @include form-control-validation($error-color, $error-color);

  &.has-feedback:after {
    content: '\e6ed';
    color: $error-color;
  }

  //select
  .#{$bl-prefix}-select {
    &-selection {
      border-color: $error-color;
    }
    &-open .#{$bl-prefix}-select-selection,
    &-focused .#{$bl-prefix}-select-selection {
      @include active($error-color);
    }
  }

  // arrow and icon
  .#{$bl-prefix}-calendar-picker-icon:after,
  .#{$bl-prefix}-picker-icon:after,
  .#{$bl-prefix}-select-arrow,
  .#{$bl-prefix}-cascader-picker-arrow {
    color: $error-color;
  }

  //input-number, timepicker
  .#{$bl-prefix}-input-number,
  .#{$bl-prefix}-time-picker-input {
    border-color: $error-color;
    &-focused,
    &:focus {
      @include active($error-color);
    }
    &:not([disabled]):hover {
      border-color: $error-color;
    }
  }
  .#{$bl-prefix}-mention-wrapper {
    .#{$bl-prefix}-mention-editor {
      &,
      &:not([disabled]):hover {
        border-color: $error-color;
      }
    }
    &.#{$bl-prefix}-mention-active .#{$bl-prefix}-mention-editor,
    .#{$bl-prefix}-mention-editor:not([disabled]):focus {
      @include active($error-color);
    }
  }
}

.is-validating {
  &.has-feedback:after {
    display: inline-block;
    animation: loadingCircle 1s infinite linear;
    content: "\e64d";
    color: $primary-color;
  }
}

.#{$bl-prefix}-advanced-search-form {
  .#{$form-prefix-cls}-item {
    margin-bottom: 16px;
  }
  .#{$bl-prefix}-input,
  .#{$bl-prefix}-input-group .#{$bl-prefix}-input,
  .#{$bl-prefix}-input-group .#{$bl-prefix}-input-group-addon {
    height: $input-height-base;
  }
}
.#{$bl-prefix}-form-yzm{
	width:100px;
	height:32px;
	margin-left:8px;
	border-radius:4px;
	display:block;
	float:left;
	img{
	  width:100px;
	  height:32px;
  }
}
.bl-form-item button{
  margin-right:16px;
}
// need there different zoom animation
// otherwise won't trigger anim
@keyframes diffZoomIn1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes diffZoomIn2 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes diffZoomIn3 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
