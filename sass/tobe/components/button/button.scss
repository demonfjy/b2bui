@import "../../function";
// mixins for button
// ------------------------
@mixin button-size($padding, $font-size, $border-radius) {
  padding: $padding;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-disabled() {
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      @include button-color($btn-disable-color, $btn-disable-bg, $btn-disable-border);
    }
  }
}
@mixin button-variant-primary($color, $background) {
  @include button-color($color, $background, $background);
  &:hover,
  &:focus {
    @include button-color($color, mix($background,#ffffff, 80%), mix($background,#ffffff, 80%));    
  }

  &:active,
  &.active {
    @include button-color($color, mix($background,#000000, 90%), mix($background,#000000, 90%));
  }

  @include button-disabled();
}

@mixin button-variant-other($color, $background, $border) {
  @include button-color($color, $background, $border);

  &:hover,
  &:focus {
    @include button-color($primary-color, $background, $primary-color);
    color:$grey-7;
  }

  &:active,
  &.active {
    @include button-color($primary-7, $background, $primary-7);
  }

  @include button-disabled();
}

@mixin button-variant-ghost($color) {
  @include button-color($color, transparent, $color);

  &:hover,
  &:focus {
    @include button-color(mix($color,#ffffff, 0.8), transparent, mix($color,#ffffff, 0.8));
  }

  &:active,
  &.active {
    @include button-color(mix($color,#000000, 0.9), transparent, mix($color,#000000, 0.9));
  }

  @include button-disabled();
}

@mixin button-color($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentColor;
    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: transparent;
    }
  }
}

@mixin button-group-base($btnClassName) {
  position: relative;
  display: inline-block;
  > .#{$btnClassName} {
    position: relative;
    z-index: 1;

    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 2;
    }

    &:disabled {
      z-index: 0;
    }
  }

  // size
  &-lg > .#{$btnClassName} {
    @include button-size($btn-padding-lg, $btn-font-size-lg, $btn-border-radius-base);
  }

  &-sm > .#{$btnClassName} {
    @include button-size($btn-padding-sm, $font-size-base, $btn-border-radius-sm);
    > .#{$iconfont-css-prefix} {
      font-size: $font-size-base;
    }
  }
}

// Base styles of buttons
// --------------------------------------------------
@mixin btn() {
  display: inline-block;
  margin-bottom: 0;
  font-weight: $btn-font-weight;
  text-align: center;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: $border-width-base $border-style-base transparent;
  white-space: nowrap;
  line-height: $line-height-base;
  @include button-size($btn-padding-base, $font-size-base, $btn-border-radius-base);
  user-select: none;
  transition: all .3s $ease-in-out;
  position: relative;

  > .#{$iconfont-css-prefix} {
    line-height: 1;
    font-size:12px;
  }

  &,
  &:active,
  &:focus {
    outline: 0;
  }

  &:not([disabled]):hover {
    text-decoration: none;
  }

  &:not([disabled]):active {
    outline: 0;
    transition: none;
  }

  &.disabled,
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }

  &-lg {
    @include button-size($btn-padding-lg, $btn-font-size-lg, $btn-border-radius-base);
  }

  &-sm {
    @include button-size($btn-padding-sm, $font-size-base, $btn-border-radius-sm);
  }
}

// primary button style
@mixin btn-primary() {
  @include button-variant-primary($btn-primary-color, $btn-primary-bg);
}

// default button style
@mixin btn-default() {
  @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
  &:hover,
  &:focus,
  &:active,
  &.active {
    background: #fff;
  }
}

// ghost button style
@mixin btn-ghost() {
  @include button-variant-other($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);
}

// dashed button style
@mixin btn-dashed() {
  @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
  border-style: dashed;
}

// danger button style
@mixin btn-danger() {
  @include button-variant-primary($btn-danger-color, $btn-danger-bg);
}

// circle button: the content only contains icon
@mixin btn-circle($btnClassName: btn) {
  @include square($btn-circle-size);
  @include button-size(0, $font-size-base + 2, 50%);

  &.#{$btnClassName}-lg {
    @include square($btn-circle-size-lg);
    @include button-size(0, $btn-font-size-lg + 2, 50%);
  }

  &.#{$btnClassName}-sm {
    @include square($btn-circle-size-sm);
    @include button-size(0, $font-size-base, 50%);
  }
}

// Horizontal button groups styl
// --------------------------------------------------
@mixin btn-group($btnClassName: btn) {
  @include button-group-base($btnClassName);

  .#{$btnClassName} + .#{$btnClassName},
  .#{$btnClassName} + &,
  & + .#{$btnClassName},
  & + & {
    margin-left: -1px;
  }

  .#{$btnClassName}:not(:first-child):not(:last-child) {
    border-radius: 0;
    padding-left: 8px;
    padding-right: 8px;
  }

  > .#{$btnClassName}:first-child {
    margin-left: 0;
    &:not(:last-child) {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      padding-right: 8px;
    }
  }

  > .#{$btnClassName}:last-child:not(:first-child) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    padding-left: 8px;
  }

  & > & {
    float: left;
  }

  & > &:not(:first-child):not(:last-child) > .#{$btnClassName} {
    border-radius: 0;
  }

  & > &:first-child:not(:last-child) {
    > .#{$btnClassName}:last-child {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      padding-right: 8px;
    }
  }

  & > &:last-child:not(:first-child) > .#{$btnClassName}:first-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    padding-left: 8px;
  }
}

$btn-prefix-cls: "#{$bl-prefix}-btn";

// for compatibile
$btn-ghost-color        : $text-color;
$btn-ghost-bg           : transparent;
$btn-ghost-border       : $border-color-base;

// Button styles
// -----------------------------
.#{$btn-prefix-cls} {
  @include btn;
  @include btn-default;

  &-primary {
    @include btn-primary;

    .#{$btn-prefix-cls}-group &:not(:first-child):not(:last-child) {
      border-right-color: $btn-group-border;
      border-left-color: $btn-group-border;

      &:disabled {
        border-color: $btn-default-border;
      }
    }

    .#{$btn-prefix-cls}-group &:first-child {
      &:not(:last-child) {
        border-right-color: $btn-group-border;
        &[disabled] {
          border-right-color: $btn-default-border;
        }
      }
    }

    .#{$btn-prefix-cls}-group &:last-child:not(:first-child),
    .#{$btn-prefix-cls}-group & + & {
      border-left-color: $btn-group-border;
      &[disabled] {
        border-left-color: $btn-default-border;
      }
    }
  }
  &-full{
  	width:100%;
  }
  &-ghost {
    @include btn-ghost;
  }

  &-dashed {
    @include btn-dashed;
  }

  &-danger {
    @include btn-danger;
  }

  &-circle,
  &-circle-outline {
    @include btn-circle($btn-prefix-cls);
  }

  &:before {
    position: absolute;
    top: -1px;
    left: -1px;
    bottom: -1px;
    right: -1px;
    background: #fff;
    opacity: 0.35;
    content: '';
    border-radius: inherit;
    z-index: 1;
    transition: opacity .2s;
    pointer-events: none;
    display: none;
  }

  &.#{$btn-prefix-cls}-loading:before {
    display: block;
  }

  .#{$iconfont-css-prefix} {
    transition: all .3s $ease-in-out;
  }

  &.#{$btn-prefix-cls}-loading:not(&-circle):not(&-circle-outline) {
    padding-left: 29px;
    pointer-events: none;
    position: relative;
    .#{$iconfont-css-prefix} {
      margin-left: -14px;
    }
  }

  &-sm.#{$btn-prefix-cls}-loading:not(.#{$btn-prefix-cls}-circle):not(.#{$btn-prefix-cls}-circle-outline) {
    padding-left: 24px;
    .#{$iconfont-css-prefix} {
      margin-left: -17px;
    }
  }

  &-group {
    @include btn-group($btn-prefix-cls);
  }

  &:not(.#{$btn-prefix-cls}-circle):not(.#{$btn-prefix-cls}-circle-outline).#{$btn-prefix-cls}-icon-only {
    padding-left: 8px;
    padding-right: 8px;
  }

  // http://stackoverflow.com/a/21281554/3040605
  &:focus > span,
  &:active > span {
    position: relative;
  }

  // To ensure that a space will be placed between character and `Icon`.
  > .#{$iconfont-css-prefix} + span,
  > span + .#{$iconfont-css-prefix} {
    margin-left: 0.5em;
  }

  &-clicked:after {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    bottom: -1px;
    right: -1px;
    border-radius: inherit;
    border: 0 solid $primary-color;
    opacity: 0.4;
    animation: buttonEffect .4s;
    display: block;
  }

  &-danger.#{$btn-prefix-cls}-clicked:after {
    border-color: $btn-danger-bg;
  }

  &-background-ghost {
    background: transparent!important;
    border-color: #fff;
    color: #fff;
  }

  &-background-ghost.#{$btn-prefix-cls}-primary {
    @include button-variant-ghost($primary-color);
  }

  &-background-ghost.#{$btn-prefix-cls}-danger {
    @include button-variant-ghost($btn-danger-bg);
  }
}

@keyframes buttonEffect {
  to {
    opacity: 0;
    top: -6px;
    left: -6px;
    bottom: -6px;
    right: -6px;
    border-width: 6px;
  }
}
